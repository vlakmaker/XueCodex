"use strict";(self.webpackChunkxuecodex=self.webpackChunkxuecodex||[]).push([[5392],{638:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"topics/machine-learning/training-process-of-ml","title":"Understanding the Training Process of a Machine Learning Model","description":"Overview of Model Training","source":"@site/docs/topics/machine-learning/training-process-of-ml.md","sourceDirName":"topics/machine-learning","slug":"/topics/machine-learning/training-process-of-ml","permalink":"/XueCodex/docs/topics/machine-learning/training-process-of-ml","draft":false,"unlisted":false,"editUrl":"https://github.com/vlakmaker/XueCodex/tree/main/docs/topics/machine-learning/training-process-of-ml.md","tags":[{"inline":true,"label":"machine-learning","permalink":"/XueCodex/docs/tags/machine-learning"},{"inline":true,"label":"keyconcepts","permalink":"/XueCodex/docs/tags/keyconcepts"},{"inline":true,"label":"training","permalink":"/XueCodex/docs/tags/training"}],"version":"current","frontMatter":{"id":"training-process-of-ml","title":"Understanding the Training Process of a Machine Learning Model","tags":["machine-learning","keyconcepts","training"]},"sidebar":"tutorialSidebar","previous":{"title":"Machine Learning Limitation","permalink":"/XueCodex/docs/topics/machine-learning/machine-learning-limitations"},"next":{"title":"Vectorizing Logistic Regression","permalink":"/XueCodex/docs/topics/machine-learning/vectorizing-logistic-regression"}}');var r=i(4848),t=i(8453);const a={id:"training-process-of-ml",title:"Understanding the Training Process of a Machine Learning Model",tags:["machine-learning","keyconcepts","training"]},l="Understanding the Training Process of a Machine Learning Model",o={},d=[{value:"Overview of Model Training",id:"overview-of-model-training",level:2},{value:"Step-by-Step Breakdown of the Training Process",id:"step-by-step-breakdown-of-the-training-process",level:2},{value:"1. <strong>Preparing the Data</strong>",id:"1-preparing-the-data",level:3},{value:"2. <strong>Creating the Model</strong>",id:"2-creating-the-model",level:3},{value:"3. <strong>Training the Model</strong>",id:"3-training-the-model",level:3},{value:"4. <strong>Evaluating the Model</strong>",id:"4-evaluating-the-model",level:3},{value:"5. <strong>Making Predictions</strong>",id:"5-making-predictions",level:3},{value:"Summary of the Model Training Process**",id:"summary-of-the-model-training-process",level:2},{value:"Final Analogy: Training Like Learning a New Skill**",id:"final-analogy-training-like-learning-a-new-skill",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"understanding-the-training-process-of-a-machine-learning-model",children:"Understanding the Training Process of a Machine Learning Model"})}),"\n",(0,r.jsx)(n.h2,{id:"overview-of-model-training",children:"Overview of Model Training"}),"\n",(0,r.jsxs)(n.p,{children:["Training a machine learning model involves feeding it data, allowing it to make predictions, evaluating how well it performs, and adjusting it until it achieves a high level of accuracy. In this case, we trained a neural network to classify images of cats and dogs using the ",(0,r.jsx)(n.strong,{children:"FastAI"})," library."]}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step-breakdown-of-the-training-process",children:"Step-by-Step Breakdown of the Training Process"}),"\n",(0,r.jsxs)(n.h3,{id:"1-preparing-the-data",children:["1. ",(0,r.jsx)(n.strong,{children:"Preparing the Data"})]}),"\n",(0,r.jsxs)(n.p,{children:["Before the model can learn, we need to provide it with labeled data. In our example, we used the ",(0,r.jsx)(n.strong,{children:"Oxford-IIIT Pets dataset"}),", which contains images of cats and dogs."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Downloading the dataset:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"path = untar_data(URLs.PETS)/'images'\n"})}),"\n",(0,r.jsx)(n.p,{children:"This line downloads and extracts the dataset into a directory."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Defining labels:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def is_cat(x): return x[0].isupper()\n"})}),"\n",(0,r.jsx)(n.p,{children:"The dataset follows a naming convention where cat names start with an uppercase letter and dog names start with a lowercase letter. This function helps label the images correctly."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Loading images and splitting data:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"dls = ImageDataLoaders.from_name_func(\n    path, get_image_files(path), valid_pct=0.2, seed=42,\n    label_func=is_cat, item_tfms=Resize(224))\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here, we:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Load all images from the dataset"}),"\n",(0,r.jsx)(n.li,{children:"Split them into training (80%) and validation (20%) sets"}),"\n",(0,r.jsx)(n.li,{children:"Apply a preprocessing step that resizes all images to 224x224 pixels"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-creating-the-model",children:["2. ",(0,r.jsx)(n.strong,{children:"Creating the Model"})]}),"\n",(0,r.jsxs)(n.p,{children:["The model we use is a ",(0,r.jsx)(n.strong,{children:"ResNet-34"})," convolutional neural network (CNN), a well-known architecture for image classification."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Defining the learner:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"learn = vision_learner(dls, resnet34, metrics=error_rate)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vision_learner"})," sets up the model with the dataset."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resnet34"})," is the pre-trained model being used as a starting point."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"metrics=error_rate"})," tells FastAI to track how many images are misclassified."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3-training-the-model",children:["3. ",(0,r.jsx)(n.strong,{children:"Training the Model"})]}),"\n",(0,r.jsxs)(n.p,{children:["Once the model is set up, we ",(0,r.jsx)(n.strong,{children:"fine-tune"})," it using pre-trained weights and adjust them based on our dataset."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fine-tuning the model:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"learn.fine_tune(1)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fine-tuning starts with a pre-trained model and updates it to adapt to our specific dataset."}),"\n",(0,r.jsxs)(n.li,{children:["The model learns patterns in the data by adjusting the weights using ",(0,r.jsx)(n.strong,{children:"Stochastic Gradient Descent (SGD)"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Training improves the weights so that the model makes better predictions over time."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"4-evaluating-the-model",children:["4. ",(0,r.jsx)(n.strong,{children:"Evaluating the Model"})]}),"\n",(0,r.jsx)(n.p,{children:"After training, we analyze how well the model performs on new, unseen data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Rate:"})," This metric shows the proportion of misclassified images. A lower error rate means the model is performing better."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Loss Function:"})," Measures how far off the model\u2019s predictions are from the correct answers. During training, this value is minimized."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"5-making-predictions",children:["5. ",(0,r.jsx)(n.strong,{children:"Making Predictions"})]}),"\n",(0,r.jsx)(n.p,{children:"Once the model is trained, it can classify new images:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'img = PILImage.create(\'new_image.jpg\')\nis_cat,_,probs = learn.predict(img)\nprint(f"Is this a cat?: {is_cat}")\nprint(f"Probability it\'s a cat: {probs[1].item():.6f}")\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"summary-of-the-model-training-process",children:"Summary of the Model Training Process**"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step 1:"})," Data Preparation \u2013 Download and label images."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step 2:"})," Model Creation \u2013 Use a pre-trained neural network (ResNet-34)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step 3:"})," Training \u2013 Fine-tune the model on our dataset."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step 4:"})," Evaluation \u2013 Measure performance using the error rate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step 5:"})," Prediction \u2013 Classify new images based on learned patterns."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"final-analogy-training-like-learning-a-new-skill",children:"Final Analogy: Training Like Learning a New Skill**"}),"\n",(0,r.jsx)(n.p,{children:"Think of training a neural network like learning to recognize dog breeds:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You start with a basic understanding (pre-trained model)."}),"\n",(0,r.jsx)(n.li,{children:"You look at many examples (training data)."}),"\n",(0,r.jsx)(n.li,{children:"You compare your guesses to correct answers (loss function)."}),"\n",(0,r.jsx)(n.li,{children:"You adjust your thinking to improve (gradient descent updates weights)."}),"\n",(0,r.jsx)(n.li,{children:"You get better over time (fine-tuning improves accuracy)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Through this process, the model becomes increasingly skilled at recognizing cats and dogs, just like a person would! This structured approach allows for powerful AI models that can classify and recognize images with high accuracy."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);